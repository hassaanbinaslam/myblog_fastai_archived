<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://hassaanbinaslam.github.io/myblog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hassaanbinaslam.github.io/myblog/" rel="alternate" type="text/html" /><updated>2022-10-18T09:53:06-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/feed.xml</id><title type="html">Random Thoughts</title><subtitle>A log of my mistakes, thoughts, and learning.</subtitle><entry><title type="html">Convolutional Neural Networks Filters and Feature Maps with PyTorch</title><link href="https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/18/pytorch-mnist-convolutional-neural-networks.html" rel="alternate" type="text/html" title="Convolutional Neural Networks Filters and Feature Maps with PyTorch" /><published>2022-10-18T00:00:00-05:00</published><updated>2022-10-18T00:00:00-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/18/pytorch-mnist-convolutional-neural-networks</id><author><name></name></author><category term="pytorch" /><summary type="html"><![CDATA[This is a practice notebook for implementing a convolutional neural network (CNN) on the MNIST dataset with PyTorch. We will implement the now famous LeNet-5 from Yann LeCun, a 7-layer CNN from 1989. Then we will explore and visualize the layers learned by our network including filters, feature maps, and output layers.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-18-pytorch-mnist-convolutional-neural-networks.jpeg" /><media:content medium="image" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-18-pytorch-mnist-convolutional-neural-networks.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Two Class (Binary) Logistic Regression in Pytorch</title><link href="https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/11/pytorch-two-class-logistic-regression.html" rel="alternate" type="text/html" title="Two Class (Binary) Logistic Regression in Pytorch" /><published>2022-10-11T00:00:00-05:00</published><updated>2022-10-11T00:00:00-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/11/pytorch-two-class-logistic-regression</id><author><name></name></author><category term="pytorch" /><summary type="html"><![CDATA[This is a practice notebook for implementing a two class logistic regression model in PyTorch. We will start by generating some synthetic data and then build an end-to-end pipeline to train a model. We will also see two ways to implement logistic regression models.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-11-pytorch-two-class-logistic-regression.jpeg" /><media:content medium="image" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-11-pytorch-two-class-logistic-regression.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Linear Regression with PyTorch</title><link href="https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/10/pytorch-linear-regression.html" rel="alternate" type="text/html" title="Linear Regression with PyTorch" /><published>2022-10-10T00:00:00-05:00</published><updated>2022-10-10T00:00:00-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/pytorch/2022/10/10/pytorch-linear-regression</id><author><name></name></author><category term="pytorch" /><summary type="html"><![CDATA[This is a practice notebook for implementing a linear regression model in PyTorch. We will start by generating some synthetic linear data and then load it into DataLoader class for creating mini-batches. Then build the complete pipeline to train the model and visualize its loss progress in TensorBoard.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-10-pytorch-linear-regression.jpeg" /><media:content medium="image" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-10-10-pytorch-linear-regression.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Train an Image Classifier using Fastai (Deep Dive Analysis)</title><link href="https://hassaanbinaslam.github.io/myblog/aws/ml/sagemaker/fastai/2022/08/10/sagemaker-fastai-classifier.html" rel="alternate" type="text/html" title="Train an Image Classifier using Fastai (Deep Dive Analysis)" /><published>2022-08-10T00:00:00-05:00</published><updated>2022-08-10T00:00:00-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/aws/ml/sagemaker/fastai/2022/08/10/sagemaker-fastai-classifier</id><author><name></name></author><category term="aws" /><category term="ml" /><category term="sagemaker" /><category term="fastai" /><summary type="html"><![CDATA[This is a practice notebook using the fastai library to build a simple image classifier for cricket, tennis, basketball, and soccer.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-08-10-sagemaker-fastai-classifier.jpeg" /><media:content medium="image" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-08-10-sagemaker-fastai-classifier.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Building a Feature Repository with SageMaker Feature Store</title><link href="https://hassaanbinaslam.github.io/myblog/aws/ml/sagemaker/2022/08/05/sagemaker-feature-store.html" rel="alternate" type="text/html" title="Building a Feature Repository with SageMaker Feature Store" /><published>2022-08-05T00:00:00-05:00</published><updated>2022-08-05T00:00:00-05:00</updated><id>https://hassaanbinaslam.github.io/myblog/aws/ml/sagemaker/2022/08/05/sagemaker-feature-store</id><author><name></name></author><category term="aws" /><category term="ml" /><category term="sagemaker" /><summary type="html"><![CDATA[This notebook demonstrates how to build a central feature repository using Amazon SageMaker Feature Store. Feature Store is used to store, retrieve, and share machine learning features.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-08-05-sagemaker-feature-store.jpeg" /><media:content medium="image" url="https://hassaanbinaslam.github.io/myblog/images/copied_from_nb/images/2022-08-05-sagemaker-feature-store.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>